#!/bin/env python

"""Get remote host info"""

from urllib.error import HTTPError
from urllib.error import URLError
from urllib.request import urlopen
import json
import socket
import sys
import prettytable
import GeoIP

from lib.logger import return_logger


class GetRemoteHost(object):
    """Class for getting remote host info"""

    def __init__(self):
        self.url = "https://httpbin.org/ip"
        header = ["ip address", "remote host", "country", "country_code"]
        self.table = prettytable.PrettyTable(header)
        self.logger = return_logger()

    @staticmethod
    def get_my_global_ipaddr(url, logger=None):
        """Get global IP address via httpbin.org."""
        try:
            ipaddr_object = urlopen(url)
        except (HTTPError, URLError) as exception:
            logger.error(exception)
            sys.exit(1)
        ipaddr_str = ipaddr_object.read()
        ipaddr_dict = json.loads(ipaddr_str)
        ipaddr = ipaddr_dict["origin"]
        return ipaddr

    @staticmethod
    def get_remote_host_from_ipaddr(ipaddr):
        """Get remote host information from given ipaddr."""
        try:
            remote_host_object = socket.gethostbyaddr(ipaddr)
            remote_host = remote_host_object[0]
        except socket.herror:
            remote_host = ipaddr
        return remote_host

    @staticmethod
    def get_country_info_from_ipaddr(ipaddr):
        """Get country information in tuple from given ipaddr."""
        geoip = GeoIP.new(GeoIP.GEOIP_MEMORY_CACHE)
        name = geoip.country_name_by_addr(ipaddr)
        code = geoip.country_code_by_addr(ipaddr)
        return (name, code)

    def do_task(self):
        """Get information and add them to table instance"""
        ip_addr = self.get_my_global_ipaddr(self.url)
        remote_host = self.get_remote_host_from_ipaddr(ip_addr)
        country_name, country_code = self.get_country_info_from_ipaddr(ip_addr)

        content = [ip_addr, remote_host, country_name, country_code]
        self.table.add_row(content)
        self.logger.info(self.table)


if __name__ == "__main__":
    WORKER = GetRemoteHost()
    WORKER.do_task()
